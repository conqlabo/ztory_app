name: Continuous Integration Flow

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    branches: [main, staging]

jobs:
  analyze-test-build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
           
      - name: Setup Java Version
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
      
      - name: Setup Flutter environnment
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # can also set flutter-version
          cache: true
      
      - name: Install project dependencies # can also be cached for f
        run: flutter pub get
      
      - name: Check Code Quality
        run: flutter analyze
      
      - name: Run tests
        run: flutter test
        
      - name: Build artifacts
        run: flutter build apk --release

      - name: Create github artifact release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'build/app/outputs/apk/release/app-release.apk'
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ''

      - name: Upload app bundle artifact
        uses: actions/upload-artifact@v2
        with: 
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

  deploy:
    name: Deploy Build
    needs: analyze-test-build
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
            
      - name: Setup Ruby for fastlan
        uses: ruby/setup-ruby@v1
        with:
            ruby-version: '3.0'
            bundler-cache: true
      
      - name: Get Branch name # usefull to know where to deploy
        id: branch
        run: echo  "::set-output name=branch::${GITHUB_REF##*/}"
      
      - name: Get Appropriate Fast Lane
        id: lane
        uses: haya14busa/action-cond@v1
        with:
          cond: ${{ steps.branch.outputs.branch == 'main' }}
          if_true: upload_prod
          if_false: upload_staging

      - name: Run Fastlane For Android
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: ${{ steps.lane.outputs.value }}
          subdirectory: android

      - name: Run Fastlane For iOS
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: ${{ steps.lane.outputs.value }}
          subdirectory: ios

      - name: Get Slackwebhook
        id: slackwebhook
        uses: haya14busa/action-cond@v1
        with:
          cond: ${{ steps.branch.outputs.branch == 'main' }}
          if_true: ${{ secrets.SLACK_PROD_WEBHOOK }}
          if_false: ${{ secrets.SLACK_STAGING_WEBHOOK }}
      
      - name: Notify on Appropriate Slack Channel
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ${{ steps.branch.outputs.branch }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: New release available
          SLACK_MESSAGE: âœ… Deployment done
          SLACK_USERNAME: ZtoryBot
          SLACK_WEBHOOK: ${{ steps.slackwebhook.outputs.value }}
